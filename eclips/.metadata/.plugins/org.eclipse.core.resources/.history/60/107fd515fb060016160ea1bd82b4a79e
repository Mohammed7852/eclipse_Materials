package com.models;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;

import org.apache.tomcat.jdbc.pool.DataSourceFactory;



import com.models.*;
import com.mysql.*;
import com.mysql.jdbc.Statement;

public class UserModel {

	
	private String name;
	private String email;
	private String pass;
	private Integer id;
	private Double lat;
	private Double lon;
	
	public String getPass(){
		return pass;
	}
	
	public void setPass(String pass){
		this.pass = pass;
	}
	
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Double getLat() {
		return lat;
	}

	public void setLat(Double lat) {
		this.lat = lat;
	}

	public Double getLon() {
		return lon;
	}

	public void setLon(Double lon) {
		this.lon = lon;
	}

	public static UserModel addNewUser(String name, String email, String pass) {
		try {
			Connection conn = DBConnection.getActiveConnection();
			
			String sql = "Insert into fcisquare.users (`name`,`email`,`password`) VALUES  (?,?,?)";
			
			// System.out.println(sql);
 			PreparedStatement stmt;
			stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			stmt.setString(1, name);
			stmt.setString(2, email);
			stmt.setString(3, pass);
			stmt.executeUpdate();
			ResultSet rs = stmt.getGeneratedKeys();
			if (rs.next()) {
				UserModel user = new UserModel();
				user.id = rs.getInt(1);
				user.email = email;
				user.pass = pass;
				user.name = name;
				user.lat = 0.0;
				user.lon = 0.0;
				System.out.println("Mohammed Ali Shabanah UserModel\n");
 				return user;
			}
			
			return null;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

	
	public static Integer getUserID(String email){
		int userID;
		try{
		Connection conn = DBConnection.getActiveConnection();
		String sql = "Select * from fcisquare.users where `email` = ? ";
		PreparedStatement stmt;
		stmt = conn.prepareStatement(sql);
		stmt.setString(1, email);
		ResultSet rs = stmt.executeQuery();
		if (rs.next()) {
			
			userID = rs.getInt("id");
			return userID;
			}
		return (Integer) null;
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return null;
}

	public static UserModel getuser(String email){
		try {
			Connection conn = DBConnection.getActiveConnection();
			String sql = "Select * from fcisquare.users where `email` = ?";
			PreparedStatement stmt;
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, email);
 			ResultSet rs = stmt.executeQuery();
			if (rs.next()) {
				UserModel user = new UserModel();
				user.id = rs.getInt(1);
				user.email = rs.getString("email");
				user.pass = rs.getString("password");
				user.name = rs.getString("name");
				user.lat = rs.getDouble("lat");
				user.lon = rs.getDouble("long");
				return user;
			}
			return null;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
		
	public static UserModel login(String email, String pass) {
		try {
			Connection conn = DBConnection.getActiveConnection();
			String sql = "Select * from fcisquare.users where `email` = ? and `password` = ?";
			PreparedStatement stmt;
			stmt = conn.prepareStatement(sql);
			stmt.setString(1, email);
			stmt.setString(2, pass);
			ResultSet rs = stmt.executeQuery();
			if (rs.next()) {
				UserModel user = new UserModel();
				user.id = rs.getInt(1);
				user.email = rs.getString("email");
				user.pass = rs.getString("password");
				user.name = rs.getString("name");
				user.lat = rs.getDouble("lat");
				user.lon = rs.getDouble("long");
				System.out.println("yeees");
				return user;
			}
			return null;
		} catch (SQLException e) {
 			e.printStackTrace();
		}
		return null;
	}
   

		
		
		
	public static boolean updateUserPosition(Integer id, Double lat, Double lon) {
		try{
			Connection conn = DBConnection.getActiveConnection();
			String sql = "Update fcisquare.users set `lat` = ? , `long` = ? where `id` = ?";
			PreparedStatement stmt;
			stmt = conn.prepareStatement(sql);
			stmt.setDouble(1, lat);
			stmt.setDouble(2, lon);
			stmt.setInt(3, id);
			stmt.executeUpdate();
			return true;
		}catch(SQLException e){
			e.printStackTrace();
		}
		return false;
	}
    public static void delete(String followID){
    	Connection conn=DBConnection.getActiveConnection();
    	String sql="delete from fcisquare.followers where userID =+"+Integer.parseInt(followID);
    	PreparedStatement stmt;
		try {
			stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			stmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

    }
	public boolean addNewFollower(Integer followID, Integer UserID) {
		try {
			Connection conn = DBConnection.getActiveConnection();
			String sql = "insert into fcisquare.follow values (?,?)";
			// System.out.println(sql);

			PreparedStatement stmt;
			stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
			stmt.setInt(1, UserID);
			stmt.setInt(2, followID);
			
			stmt.executeUpdate();
			return true;
			
//			ResultSet rs = stmt.getGeneratedKeys();
//			if (rs.next()) {
//				follower user = new follower();
//				user.UserId = UserID;
//				user.FollowId = followID;
//				
//				return user;
//			}
//			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
return false;
	}
	
public static  boolean delete(int uID,int fID){
	try{
		Connection conn=DBConnection.getActiveConnection();
		String sql="delete from fcisquare.follow where followID=? and userID=?";
		PreparedStatement stmt;
		
		stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		stmt.setInt(1, uID);
		stmt.setInt(2, fID);
		stmt.executeUpdate();
		return true;
	}
 catch (SQLException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
	
return false;
	}

public static UserModel getLocation(int id){
	try{
		Connection conn=DBConnection.getActiveConnection();
		String  sql="select * from fcisquare.users where id="+id;
		PreparedStatement stmt;

		stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		//stmt.setInt(1, id);

		ResultSet rs = stmt.executeQuery();

		if(rs.next()){
		
		UserModel usr=new UserModel();
		
		usr.setId(rs.getInt("id"));
		usr.setName(rs.getString("name"));
		usr.setEmail(rs.getString("email"));
		usr.setPass(rs.getString("password"));
		usr.setLat(rs.getDouble("lat"));
		usr.setLon(rs.getDouble("long"));
		System.out.println("  user  is"+usr.email+"  "+usr.name+" "+usr.id);
		    
		return usr;
		}
		
	

	}catch (SQLException e) {
		e.printStackTrace();}
		
		return  null;
	}

public static ArrayList <UserModel> retrievefollowers(String email ){
		
	ArrayList<UserModel>followers=	new ArrayList<>();
try{
	Connection conn=DBConnection.getActiveConnection();
	int id  = getUserID(email);
	String  sql="select * from fcisquare.users inner join fcisquare.follow on id=followID and userID="+id;
	PreparedStatement stmt;

	stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
	//stmt.setInt(1, id);

	ResultSet rs = stmt.executeQuery();

	while(rs.next()){
	
	UserModel usr=new UserModel();
	usr.setId(rs.getInt("id"));
	usr.setName(rs.getString("name"));
	usr.setEmail(rs.getString("email"));
	usr.setPass(rs.getString("password"));
	usr.setLat(rs.getDouble("lat"));
	usr.setLon(rs.getDouble("long"));
	System.out.println("  user  is"+usr.email+"  "+usr.name+" "+usr.id);
	followers.add(usr);
	}
	
return followers;

}catch (SQLException e) {
	e.printStackTrace();}
	
	return  null;
}

}